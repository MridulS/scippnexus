name: Docs

on:
  workflow_dispatch:
    inputs:
      publish:
        default: false
        type: boolean
      version:
        default: ''
        required: false
        type: string
  workflow_call:
    inputs:
      publish:
        default: false
        type: boolean
      version:
        default: ''
        required: false
        type: string

env:
  VERSION: ${{ inputs.version }}

jobs:
  docs:
    name: Build documentation
    runs-on: ubuntu-20.04
    steps:
      - run: sudo apt install --yes graphviz pandoc
      - uses: actions/checkout@v3
        #TODO uncomment this, once we have release with docs/version,py
        #with:
        #  ref: ${{ inputs.version }}
      - uses: actions/setup-python@v3
        with:
          python-version: 3.8
      - name: Manage versions
        id: version
        # TODO get release list
        run: |
          # TODO move into tox step, change script to give target folder, to avoid mess in deploy step
          echo "version.latest=$(python docs/version.py --repo=scippnexus --version=${VERSION} --action=is-latest)" >> $GITHUB_ENV
          echo "version.target=${VERSION%.*}" >> $GITHUB_ENV
      - run: python -m pip install --upgrade pip
      - run: python -m pip install -r requirements/ci.txt
      - run: |
          export LATEST_VERSION=${version.latest}
          tox --skip-pkg-install -e docs scippnexus==${VERSION}
        if: ${{ inputs.publish }}
      - run: tox -e docs
        if: ${{ !inputs.publish }}
      - uses: actions/upload-artifact@v3
        with:
          name: html
          path: html/

      - uses: JamesIves/github-pages-deploy-action@v4.3.4
        if: ${{ inputs.publish }}
        with:
          branch: gh-pages
          folder: html
          # TODO change release-test to release
          # TODO change 'release-test/stable' to ''
          target-folder: ${{ env.version.latest == 'True' && 'release-test/stable' || format('release-test/{0}', env.version.target) }}
          single-commit: true
          clean-exclude: release
          ssh-key: ${{ secrets.GH_PAGES_DEPLOY_KEY }}
